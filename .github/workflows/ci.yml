name: Node.js CI and Linting

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering of the workflow
    inputs:
      run_lint:
        description: "Run the linter"
        required: false
        default: "true"

jobs:
  build-and-lint:
    runs-on: ubuntu-latest
    container:
      image: node:20
    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    # Install dependencies
    - name: Install dependencies
      run: npm ci

    # Run Super-Linter
    - name: Run Linter
      uses: github/super-linter@v5
      env:
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VALIDATE_ALL_CODEBASE: true
        VALIDATE_JAVASCRIPT_ES: true
        VALIDATE_JSON: true

    # Tests commented out
    #- name: Run tests
    #  run: npm test

    # Start the bot
    - name: Start the bot
      run: |
        export HELIUS_HTTP_URL=${{ secrets.HELIUS_HTTP_URL }}
        export HELIUS_WS_URL=${{ secrets.HELIUS_WS_URL }}
        export HELIUS_ECLIPSE_URL=${{ secrets.HELIUS_ECLIPSE_URL }}
        export JITO_BLOCK_ENGINE_URL=${{ secrets.JITO_BLOCK_ENGINE_URL }}
        export JITO_RELAYER_URL=${{ secrets.JITO_RELAYER_URL }}
        export JITO_NTP_URL=${{ secrets.JITO_NTP_URL }}
        export WALLET_ADDRESS=${{ secrets.WALLET_ADDRESS }}
        export WALLET_PRIVATE_KEY=${{ secrets.WALLET_PRIVATE_KEY }}
        export TARGET_WALLET=${{ secrets.TARGET_WALLET }}
        export MAX_EXPOSURE_PER_TRADE=1.0
        export STOP_LOSS_PERCENTAGE=20
        export MAX_DAILY_LOSS=1.0
        export MIN_LIQUIDITY=50
        export MAX_SLIPPAGE=1.5
        export GAS_MULTIPLIER=1.2
        export FRONTRUN_DELAY=50
        export COPY_SIZE_PERCENTAGE=90
        export MAX_RETRIES=3
        export REQUEST_TIMEOUT=5000
        export DISCORD_WEBHOOK=${{ secrets.DISCORD_WEBHOOK }}
        export TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
        export TELEGRAM_CHANNEL_ID=${{ secrets.TELEGRAM_CHANNEL_ID }}
        export FAILED_TRADES_THRESHOLD=3
        export MAX_EXECUTION_TIME=1000
        export MIN_PROFIT_THRESHOLD=-0.1
        export DO_IP=${{ secrets.DO_IP }}
        export SSH_PUBLIC_KEY=${{ secrets.SSH_PUBLIC_KEY }}
        
        # Run the bot with index.js
        node index.js
